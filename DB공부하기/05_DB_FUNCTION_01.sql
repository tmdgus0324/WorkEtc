/*
CONNECT BY 방식의 쿼리문은 성능이 저하된다. 이를 막기 위하여 함수로 속도를 개선한다.
*/


-- A,B,C,D 로 되어 있는 컬럼을 열로 나누는 함수
CREATE OR REPLACE FUNCTION SPLIT_STRING(
  P_STRING IN VARCHAR2,
  P_DELIMITER IN VARCHAR2
) RETURN SYS.ODCIVARCHAR2LIST PIPELINED IS
  L_START NUMBER := 1;
  L_END NUMBER;
BEGIN
  LOOP
    L_END := INSTR(P_STRING, P_DELIMITER, L_START);
    IF L_END = 0 THEN
      PIPE ROW(SUBSTR(P_STRING, L_START));
      EXIT;
    END IF;
    PIPE ROW(SUBSTR(P_STRING, L_START, L_END - L_START));
    L_START := L_END + LENGTH(P_DELIMITER);
  END LOOP;
  RETURN;
END;
/

-- 열로 나눠진 열을 ,를 붙여서 한 ROW로 만드는 함수
CREATE OR REPLACE FUNCTION GET_AGGREGATED_NAMES(
  P_STRING IN VARCHAR2
) RETURN VARCHAR2 IS
  L_RESULT VARCHAR2(4000);
BEGIN
  -- 입력값이 NULL인 경우 빈 문자열 반환
  IF P_STRING IS NULL THEN
    RETURN '';
  END IF;

  -- LISTAGG 수행
  SELECT LISTAGG(E.NAME, ',') WITHIN GROUP (ORDER BY E.NAME)
  INTO L_RESULT
  FROM EMP_TABLE E
  WHERE E.USER_ID IN (
    SELECT COLUMN_VALUE 
    FROM TABLE(SPLIT_STRING(P_STRING, ','))
  );

  RETURN L_RESULT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN ''; -- 결과가 없을 경우 빈 문자열 반환
END;
/